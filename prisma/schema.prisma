// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

enum UserRole {
    ADMIN
    STUDENT
    USER
}

model User {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    name           String?
    email          String?   @unique
    phone          String?
    emailVerified  DateTime?
    image          String?
    role           UserRole  @default(USER)
    hashedPassword String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    favoriteIds    String[]  @db.ObjectId

    accounts     Account[]
    listings     Listing[]
    reservations Reservation[]
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Listing {
    id                 String   @id @default(auto()) @map("_id") @db.ObjectId
    title              String
    shortDescription   String
    description        String
    imageSrc           String
    MediaSrc           String[]
    createdAt          DateTime @default(now())
    category           String
    YearsOfExperience  Int
    Contact            String
    DeliveryTime       Int
    RevisionNumber     Int
    locationValue      String
    userId             String   @db.ObjectId
    price              Int
    genre              Json?
    productionsoftware Json?
    productionpurpose  Json?
    language           Json?
    instrument         Json?
    beattype           Json?
    beatmood           Json?
    style              Json?
    accent             Json?
    gender             Json?
    agerange           Json?
    voiceoverpurpose   Json?
    voiceovertone      Json?
    effecttype         Json?
    videotypes         Json?

    user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    reservations Reservation[]
}

model Reservation {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    userId     String   @db.ObjectId
    listingId  String   @db.ObjectId
    startDate  DateTime
    endDate    DateTime
    totalPrice Int
    createdAt  DateTime @default(now())

    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
